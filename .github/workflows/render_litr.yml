# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    paths: ['create-*.Rmd', 'source-files/**']

name: render-litr

jobs:
  render-litr:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_COMPILE_AND_INSTALL_PACKAGES: never
      RENV_PATHS_ROOT: ~/.cache/R/renv
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2

      - name: Install ubuntu dependencies avoid installation errors
        run: sudo apt-get install libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev
      
      - uses: r-lib/actions/setup-renv@v2

      - name: Try loading renv then restoring
        run: |
          renv::load()
          .libPaths()
          renv::restore()
        shell: Rscript {0}
      
      # - name: Install R dependencies
      #   run: |
      #     options(
      #       crayon.enabled = TRUE,
      #       install.packages.check.source = "no",
      #       pkgType = ifelse(grepl("linux", R.version$os), "source", "binary")
      #     )
      #     install.packages(c("remotes", "knitr", "rmarkdown"))
      #   shell: Rscript {0}

      # - name: Install litr
      #   run: |
      #     options(
      #       crayon.enabled = TRUE,
      #       install.packages.check.source = "no",
      #       pkgType = ifelse(grepl("linux", R.version$os), "source", "binary")
      #     )
      #     renv::install("jacobbien/litr-project:litr@*release")
      #   shell: Rscript {0}
      - name: Set environment variables
        run: |
          TOP_LEVEL_RMD=($(find . -maxdepth 1 -type f  -regex '.*create-.*\.[Rr][Mm][Dd]' -exec basename {} \;))
          echo "$TOP_LEVEL_RMD"
          RMD_FILENAME=${TOP_LEVEL_RMD/.*/}
          PKG_NAME=$(echo "$RMD_FILENAME" | rev | cut -d- -f1 | rev)
          echo "$PKG_NAME"
          RMD_PATH=($(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep "$TOP_LEVEL_RMD"))
          echo "$RMD_PATH"

          echo "RMD_PATH=$RMD_PATH" >> $GITHUB_ENV
          echo "RMD_FILENAME=$RMD_FILENAME" >> $GITHUB_ENV
          echo "PKG_NAME=$PKG_NAME" >> $GITHUB_ENV
          echo "$TOP_LEVEL_RMD=$TOP_LEVEL_RMD" >> $GITHUB_ENV
      - name: Render Rmarkdown files and Commit Results
        run: |
          Rscript -e 'for (f in commandArgs(TRUE)) if (file.exists(f)) litr::render(f)' ${RMD_PATH[*]}
          git config --local user.name "$GITHUB_ACTOR"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git add ${RMD_FILENAME}.html ${PKG_NAME}/
          git commit -m 'Re-build Litr file and package' || echo "No changes to commit"
          git push origin || echo "No changes to commit"
